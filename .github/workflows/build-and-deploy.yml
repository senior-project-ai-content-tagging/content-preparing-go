name: Build and Deploy Content Preparing

on:
  push:
    branches:
      - master

env:
  CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
  SERVICE_NAME: content-preparing
  REGION: asia-east1
  IMAGE_NAME: content-preparing
  IMAGE_TAG: ${{ github.sha }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Configure Docker
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: _json_key
        password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Build and deploy container image
      run: make docker-build

    - name: Tag image
      run: |
        docker tag content-preparing:master ${{ env.CONTAINER_REGISTRY }}:${{ env.IMAGE_TAG }}

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: redeploy cloud run
      run: gcloud run deploy ${{ env.SERVICE_NAME }} --project ${{ env.PROJECT_ID }} --region ${{ env.REGION }} --image ${{ env.CONTAINER_REGISTRY }}:${{ env.IMAGE_TAG }}

    - name: Set New Revision
      id: set_revision
      run: |
        revision=$(gcloud run revisions list --service=${{ env.SERVICE_NAME }} --platform=managed --region=${{ env.REGION }} --format="value(metadata.name)")
        echo "::set-output name=new_revision::$revision"

    - name: Redeploy Cloud Run
      run: |
        gcloud run services update-traffic ${{ env.SERVICE_NAME }} --project ${{ env.PROJECT_ID }} --region ${{ env.REGION }} --to-revisions=${{ steps.set_revision.outputs.new_revision }}=100
